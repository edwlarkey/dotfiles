#!/usr/bin/env bash
#
# Sets up my dotfiles
#

set -e

echo ''

info () {
    printf "\r\033[2K  [ \033[00;34m..\033[0m ] %s\n" "$1"
}

user () {
    printf "\r\033[2K  [ \033[00;33m##\033[0m ] %s\n" "$1"
}

success () {
    printf "\r\033[2K  [ \033[00;32mOK\033[0m ] %s\n" "$1"
}

fail () {
    printf "\r\033[2K  [\033[0;31mFAIL\033[0m] %s\n" "$1"
    echo ''
    exit
}

setup_gitconfig () {
    info 'Setup git'

    if [ -f "$HOME/.local.gitconfig" ]; then
      info "$HOME/.local.gitconfig found, deleting"
      rm "$HOME/.local.gitconfig"
    fi

    mkdir -p $HOME/.config/git
    mkdir -p $HOME/git
    ln -nfs "$HOME/dotfiles/git/gitconfig" "$HOME/.gitconfig"
    git config --global core.editor vim
    git config --file "$HOME/.config/git/config" commit.template "~/dotfiles/git/git-commit-template"
    ln -nfs "$HOME/dotfiles/git/$git_location-config" "$HOME/.config/git/config"

    success 'Git setup complete'
}

link_files () {
    info 'Linking files'
    ln -nfs "$HOME/dotfiles/vim" "$HOME/.vim"
    ln -nfs "$HOME/dotfiles/vim/vimrc" "$HOME/.vimrc"
    success 'vim linked'
    ln -nfs "$HOME/dotfiles/bin" "$HOME/bin"
    success 'bin linked'
    ln -nfs "$HOME/dotfiles/tmux/tmux.conf" "$HOME/.tmux.conf"
    success 'tmux linked'
    ln -nfs "$HOME/dotfiles/mutt" "$HOME/.mutt"
    success 'mutt linked'
    ln -nfs "$HOME/dotfiles/zsh" "$HOME/.zsh"
    ln -nfs "$HOME/dotfiles/zsh/zlogin" "$HOME/.zlogin"
    ln -nfs "$HOME/dotfiles/zsh/zlogout" "$HOME/.zlogout"
    ln -nfs "$HOME/dotfiles/zsh/zprofile" "$HOME/.zprofile"
    ln -nfs "$HOME/dotfiles/zsh/zshrc" "$HOME/.zshrc"
    ln -nfs "$HOME/dotfiles/zsh/zshenv" "$HOME/.zshenv"
    success 'zsh linked'
    ln -nfs "$HOME/dotfiles/xinitrc" "$HOME/.xinitrc"
    success 'xinitrc config linked'
    ln -nfs "$HOME/dotfiles/alacritty.yml" "$HOME/.config/alacritty/alacritty.yml"
    success 'alacritty config linked'
    ln -nfs "$HOME/dotfiles/starship.toml" "$HOME/.config/starship.toml"
    success 'starship config linked'
    ln -nfs "$HOME/dotfiles/bspwm" "$HOME/.config/bspwm"
    success 'bspwm config linked'
    ln -nfs "$HOME/dotfiles/sxhkd" "$HOME/.config/sxhkd"
    success 'sxhkd config linked'
    ln -nfs "$HOME/dotfiles/polybar" "$HOME/.config/polybar"
    success 'polybar config linked'
    ln -nfs "$HOME/dotfiles/rofi" "$HOME/.config/rofi"
    success 'rofi config linked'
    ln -nfs "$HOME/dotfiles/dunst" "$HOME/.config/dunst"
    success 'dunst config linked'
    ln -nfs "$HOME/dotfiles/openbox" "$HOME/.config/openbox"
    success 'openbox config linked'
    ln -nfs "$HOME/dotfiles/obmenu-generator" "$HOME/.config/obmenu-generator"
    success 'obmenu-generator config linked'
    ln -nfs "$HOME/dotfiles/tint2" "$HOME/.config/tint2"
    success 'tint2 config linked'
}

make_dirs () {
    info 'Creating directories'
    mkdir -p "$HOME/.config"
    mkdir -p "$HOME/.config/git"
    mkdir -p "$HOME/.config/alacritty"
    mkdir -p "$HOME/.vim-backup"
    mkdir -p "$HOME/.vim-undo"
    mkdir -p "$HOME/.vim-swap"
    success 'vim dirs created'
    mkdir -p "$HOME/git"
    success "$HOME/git created"
}

pull_submodules () {
    cd "$HOME/dotfiles" && git submodule init && git submodule update
    git submodule update --init --recursive
}

install_vim_plugins () {
    info 'Install Vim plugins'
    vim +PlugInstall +qall
    success 'Plugins installed'
}

# setup_gitconfig
PS3='Set up for which location: '
options=("Home" "Work" "Other" "Quit")
select opt in "${options[@]}"
do
    case $opt in
        "Home")
            info "Setting up for Home"
            git_location=home
            break
            ;;
        "Work")
            info "Setting up for Work"
            git_location=work
            break
            ;;
        "Quit")
            exit 1
            ;;
        *) echo invalid option;;
    esac
done

make_dirs
setup_gitconfig
link_files
pull_submodules
install_vim_plugins
