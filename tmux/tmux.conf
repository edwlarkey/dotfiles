# set-option -ga terminal-overrides ",xterm-256color:Tc:smcup@:rmcup@"
set -g default-terminal "screen-256color"
# set-window-option -g utf8 on
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g terminal-overrides ',xterm-256color:Tc'
if -b "command -v reattach-to-user-namespace > /dev/null 2>&1" \
    "run 'tmux set -g default-command \"exec $(tmux show -gv default-shell) 2>/dev/null & reattach-to-user-namespace -l $(tmux show -gv default-shell)\"'"
# set-option -g default-command "reattach-to-user-namespace -l zsh"

set -g prefix2 C-a              # GNU-Screen compatible prefix
bind C-a send-prefix -2

set -g history-limit 20000
set -g display-time 4000
set -g mouse on                 # Enable mouse support
set-option -g bell-action any

# trigger copy mode by
bind -n M-Up copy-mode

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 2 scroll-down

# Scroll c-b+[ then use vi like movements...
# http://stackoverflow.com/questions/14300684/tmux-scroll-up-down-page-using-ctrl-b-and-ctrl-f
setw -g mode-keys vi
set -g status-keys vi
bind-key -T copy-mode-vi Up send-keys -X history-up
bind-key -T copy-mode-vi Down send-keys -X history-down

yank="~/dotfiles/tmux/yank.sh"
# Copy selection on drag end event, but do not cancel copy mode and do not clear selection
# clear select on subsequence mouse click
bind -T copy-mode-vi MouseDragEnd1Pane \
    send-keys -X copy-pipe "$yank"
bind -T copy-mode-vi MouseDown1Pane select-pane \; send-keys -X clear-selection


# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# reload tmux conf
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# Windows are indexed from 1, not, which makes them line up a little better
# # with the order of the number keys on the keyboard for one thing.
set -g base-index 1
setw -g pane-base-index 1

# Pane movements
# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+

# Use fzf to list and select sessions
bind-key -n F4 run-shell "tmux list-sessions -F \"##S\" | fzf-tmux | xargs tmux switch -t"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind h if-shell "$is_vim" "send-keys C-w h" "select-pane -L"
bind j if-shell "$is_vim" "send-keys C-w j" "select-pane -D"
bind k if-shell "$is_vim" "send-keys C-w k" "select-pane -U"
bind l if-shell "$is_vim" "send-keys C-w l" "select-pane -R"
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l

# Resize tmux panes
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# move around panes with hjkl, as one would in vim after pressing ctrl-w
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

set -g status-bg "colour0"
set -g message-command-fg "colour7"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-fg "colour2"
set -g message-bg "colour2"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g message-fg "colour0"
set -g message-command-bg "colour2"
set -g status-attr "none"
# set -g status-utf8 "on"
set -g pane-border-fg "colour2"
set -g status-left-attr "none"
setw -g window-status-fg "colour10"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour2"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour0"
setw -g window-status-separator ""
setw -g window-status-bg "colour0"
set -g status-left "#[fg=colour7,bg=colour8] #S "
set -g status-right "#[fg=colour0,bg=colour2] %a %Y-%m-%d #[fg=colour0,bg=colour1,nobold] #(date -u | awk '{print $4}' | cut -c 1-5) UTC │ %H:%M %Z │ %I:%M %p" #[fg=colour252,bg=colour236,nobold,nounderscore,noitalics][fg=colour235,bg=colour252] #h "
setw -g window-status-format "#[fg=colour4,bg=colour0] {#I-#W} "
setw -g window-status-current-format "#[fg=colour0,bg=colour4] {#I-#W} "
